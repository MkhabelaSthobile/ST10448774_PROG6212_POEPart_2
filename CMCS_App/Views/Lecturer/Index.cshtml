@model IEnumerable<CMCS_App.Models.Claim>

@{
    ViewData["Title"] = "Lecturer Dashboard";
}

<div class="container mt-4">
    <h2 class="mb-4 text-primary">Lecturer Dashboard</h2>

    <!-- Success/Error Messages -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Submit Claim -->
    <div class="card shadow-sm mb-4">
        <div class="card-header bg-primary text-white">
            Submit a New Claim
        </div>
        <div class="card-body">
            <form asp-action="SubmitClaim" method="post" enctype="multipart/form-data">
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="ModuleName" class="form-label">Module Name *</label>
                            <input type="text" class="form-control" id="ModuleName" name="ModuleName"
                                   required placeholder="Enter module name" />
                        </div>

                        <div class="mb-3">
                            <label for="HourlyRate" class="form-label">Hourly Rate (R) *</label>
                            <input type="number" class="form-control" id="HourlyRate" name="HourlyRate"
                                   step="0.01" min="0.01" max="1000" required
                                   placeholder="Enter hourly rate" />
                        </div>

                        <div class="mb-3">
                            <label for="Month" class="form-label">Month *</label>
                            <select class="form-control" id="Month" name="Month" required>
                                <option value="">Select Month</option>
                                <option value="January">January</option>
                                <option value="February">February</option>
                                <option value="March">March</option>
                                <option value="April">April</option>
                                <option value="May">May</option>
                                <option value="June">June</option>
                                <option value="July">July</option>
                                <option value="August">August</option>
                                <option value="September">September</option>
                                <option value="October">October</option>
                                <option value="November">November</option>
                                <option value="December">December</option>
                            </select>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="HoursWorked" class="form-label">Hours Worked *</label>
                            <input type="number" class="form-control" id="HoursWorked" name="HoursWorked"
                                   min="1" max="200" required placeholder="Enter hours worked" />
                        </div>

                        <div class="mb-3">
                            <label for="TotalAmount" class="form-label">Total Amount (R)</label>
                            <input type="text" class="form-control" id="TotalAmount" readonly
                                   placeholder="Will be calculated automatically" />
                        </div>

                        <div class="mb-3">
                            <label for="SupportingDocument" class="form-label">Upload Supporting Document</label>
                            <input type="file" class="form-control" id="SupportingDocument" name="supportingDocument"
                                   accept=".pdf,.docx,.xlsx,.jpg,.png" />
                            <div class="form-text">Accepted formats: PDF, DOCX, XLSX, JPG, PNG (Max 5MB)</div>
                        </div>
                    </div>
                </div>

                <button type="submit" class="btn btn-success btn-lg">
                    <i class="fas fa-paper-plane"></i> Submit Claim
                </button>
            </form>
        </div>
    </div>

    <!-- Claim Status -->
    <div class="card shadow-sm">
        <div class="card-header bg-secondary text-white d-flex justify-content-between align-items-center">
            <span>My Claim History</span>
            <span class="badge bg-light text-dark">@Model.Count() claims</span>
        </div>
        <div class="card-body">
            @if (Model.Any())
            {
                <table class="table table-bordered table-striped align-middle">
                    <thead class="table-dark">
                        <tr>
                            <th>Claim ID</th>
                            <th>Module</th>
                            <th>Month</th>
                            <th>Hours</th>
                            <th>Hourly Rate</th>
                            <th>Total Amount</th>
                            <th>Document</th>
                            <th>Status</th>
                            <th>Rejection Reason</th>
                            <th>Submission Date</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var claim in Model)
                        {
                            <tr>
                                <td>@claim.ClaimID</td>
                                <td>@claim.Month</td>
                                <td>@claim.HoursWorked</td>
                                <td>R @claim.HourlyRate.ToString("F2")</td>
                                <td>R @claim.TotalAmount.ToString("F2")</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(claim.SupportingDocument))
                                    {
                                        <a asp-action="DownloadDocument" asp-route-claimId="@claim.ClaimID" asp-route-fileName="@claim.SupportingDocument"
                                           class="badge bg-info text-decoration-none">
                                            Download
                                        </a>
                                    }
                                    else
                                    {
                                        <span class="text-muted">No document</span>
                                    }
                                </td>
                                <td>
                                    <span class="badge @GetStatusBadgeClass(claim.Status)">
                                        @claim.Status
                                    </span>
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(claim.RejectionReason))
                                    {
                                        <small class="text-danger">@claim.RejectionReason</small>
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                                <td>@claim.SubmissionDate.ToString("dd MMM yyyy")</td>
                                <td>
                                    <a asp-action="Details" asp-route-id="@claim.ClaimID"
                                       class="btn btn-info btn-sm">Details</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div class="text-center text-muted py-4">
                    <p>No claims submitted yet.</p>
                    <p>Use the form above to submit your first claim.</p>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Calculate total amount automatically
        document.addEventListener('DOMContentLoaded', function() {
            const hoursInput = document.getElementById('HoursWorked');
            const rateInput = document.getElementById('HourlyRate');
            const totalInput = document.getElementById('TotalAmount');

            function calculateTotal() {
                const hours = parseFloat(hoursInput.value) || 0;
                const rate = parseFloat(rateInput.value) || 0;
                const total = hours * rate;
                totalInput.value = 'R ' + total.toFixed(2);
            }

            hoursInput.addEventListener('input', calculateTotal);
            rateInput.addEventListener('input', calculateTotal);

            // Initialize calculation on page load
            calculateTotal();
        });
    </script>
}

@functions {
    public string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Submitted" or "Pending" => "bg-warning",
            "Approved by Coordinator" => "bg-success",
            "Approved by Manager" => "bg-success",
            "Rejected" or "Rejected by Coordinator" or "Rejected by Manager" => "bg-danger",
            _ => "bg-secondary"
        };
    }
}